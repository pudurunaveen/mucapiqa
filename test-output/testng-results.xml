<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="14" passed="12">
  <reporter-output>
    <line>
      <![CDATA[For the asset: barOne]]>
    </line>
    <line>
      <![CDATA[Error: expected [false] but found [true]]]>
    </line>
    <line>
      <![CDATA[For the asset: barOne]]>
    </line>
    <line>
      <![CDATA[Error: expected [false] but found [true]]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="15769" started-at="2019-08-02T09:55:54Z" finished-at="2019-08-02T09:56:10Z">
    <groups>
    </groups>
    <test name="CAPI Regression Test" duration-ms="15769" started-at="2019-08-02T09:55:54Z" finished-at="2019-08-02T09:56:10Z">
      <class name="com.mu.testcases.AndroidIOSNonSub">
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:com.mu.testcases.AndroidIOSNonSub@3170d7db]" name="setUpBeforeMethod" is-config="true" duration-ms="2" started-at="2019-08-02T15:25:55Z" finished-at="2019-08-02T15:25:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="verifyAndroidAnon()[pri:0, instance:com.mu.testcases.AndroidIOSNonSub@3170d7db]" name="verifyAndroidAnon" duration-ms="4701" started-at="2019-08-02T15:25:55Z" finished-at="2019-08-02T15:25:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAndroidAnon -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:com.mu.testcases.AndroidIOSNonSub@3170d7db]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2019-08-02T15:25:59Z" finished-at="2019-08-02T15:25:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:com.mu.testcases.AndroidIOSNonSub@3170d7db]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2019-08-02T15:25:59Z" finished-at="2019-08-02T15:25:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="verifyAndroidRegi()[pri:0, instance:com.mu.testcases.AndroidIOSNonSub@3170d7db]" name="verifyAndroidRegi" duration-ms="1994" started-at="2019-08-02T15:25:59Z" finished-at="2019-08-02T15:26:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAndroidRegi -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:com.mu.testcases.AndroidIOSNonSub@3170d7db]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2019-08-02T15:26:01Z" finished-at="2019-08-02T15:26:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:com.mu.testcases.AndroidIOSNonSub@3170d7db]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2019-08-02T15:26:01Z" finished-at="2019-08-02T15:26:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="verifyIOSAnon()[pri:0, instance:com.mu.testcases.AndroidIOSNonSub@3170d7db]" name="verifyIOSAnon" duration-ms="1317" started-at="2019-08-02T15:26:01Z" finished-at="2019-08-02T15:26:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIOSAnon -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:com.mu.testcases.AndroidIOSNonSub@3170d7db]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2019-08-02T15:26:03Z" finished-at="2019-08-02T15:26:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="verifyIOSRegi()[pri:0, instance:com.mu.testcases.AndroidIOSNonSub@3170d7db]" name="verifyIOSRegi" duration-ms="1431" started-at="2019-08-02T15:26:03Z" finished-at="2019-08-02T15:26:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIOSRegi -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:com.mu.testcases.AndroidIOSNonSub@3170d7db]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2019-08-02T15:26:03Z" finished-at="2019-08-02T15:26:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:com.mu.testcases.AndroidIOSNonSub@3170d7db]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2019-08-02T15:26:04Z" finished-at="2019-08-02T15:26:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
      </class> <!-- com.mu.testcases.AndroidIOSNonSub -->
      <class name="com.mu.testcases.WebAnonOptimizely">
        <test-method status="PASS" signature="verifyWebAnonOptimizely()[pri:0, instance:com.mu.testcases.WebAnonOptimizely@b8cc1a56]" name="verifyWebAnonOptimizely" duration-ms="1591" started-at="2019-08-02T15:26:04Z" finished-at="2019-08-02T15:26:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWebAnonOptimizely -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:com.mu.testcases.WebAnonOptimizely@b8cc1a56]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2019-08-02T15:26:04Z" finished-at="2019-08-02T15:26:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:com.mu.testcases.WebAnonOptimizely@b8cc1a56]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2019-08-02T15:26:06Z" finished-at="2019-08-02T15:26:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
      </class> <!-- com.mu.testcases.WebAnonOptimizely -->
      <class name="com.mu.testcases.AndroidIOSKillSet">
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:com.mu.testcases.AndroidIOSKillSet@f5463b24]" name="setUpBeforeMethod" is-config="true" duration-ms="2" started-at="2019-08-02T15:25:55Z" finished-at="2019-08-02T15:25:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="verifyAndroidSub()[pri:0, instance:com.mu.testcases.AndroidIOSKillSet@f5463b24]" name="verifyAndroidSub" duration-ms="4691" started-at="2019-08-02T15:25:55Z" finished-at="2019-08-02T15:25:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAndroidSub -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:com.mu.testcases.AndroidIOSKillSet@f5463b24]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2019-08-02T15:25:59Z" finished-at="2019-08-02T15:25:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:com.mu.testcases.AndroidIOSKillSet@f5463b24]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2019-08-02T15:25:59Z" finished-at="2019-08-02T15:25:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="verifyIOSSub()[pri:0, instance:com.mu.testcases.AndroidIOSKillSet@f5463b24]" name="verifyIOSSub" duration-ms="1529" started-at="2019-08-02T15:25:59Z" finished-at="2019-08-02T15:26:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIOSSub -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:com.mu.testcases.AndroidIOSKillSet@f5463b24]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2019-08-02T15:26:01Z" finished-at="2019-08-02T15:26:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
      </class> <!-- com.mu.testcases.AndroidIOSKillSet -->
      <class name="com.mu.testcases.WebOptimizely">
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:com.mu.testcases.WebOptimizely@b4ef6091]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2019-08-02T15:26:06Z" finished-at="2019-08-02T15:26:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="verifyWebOptimizely()[pri:0, instance:com.mu.testcases.WebOptimizely@b4ef6091]" name="verifyWebOptimizely" duration-ms="1808" started-at="2019-08-02T15:26:06Z" finished-at="2019-08-02T15:26:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWebOptimizely -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:com.mu.testcases.WebOptimizely@b4ef6091]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2019-08-02T15:26:07Z" finished-at="2019-08-02T15:26:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
      </class> <!-- com.mu.testcases.WebOptimizely -->
      <class name="com.mu.testcases.TestConfig">
        <test-method status="PASS" signature="testBeforeSuite()[pri:0, instance:com.mu.testcases.TestConfig@5a08197e]" name="testBeforeSuite" is-config="true" duration-ms="11" started-at="2019-08-02T15:25:54Z" finished-at="2019-08-02T15:25:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBeforeSuite -->
        <test-method status="PASS" signature="testBeforeTest(java.lang.String)[pri:0, instance:com.mu.testcases.TestConfig@5a08197e]" name="testBeforeTest" is-config="true" duration-ms="3" started-at="2019-08-02T15:25:54Z" finished-at="2019-08-02T15:25:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[prod_published]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBeforeTest -->
        <test-method status="PASS" signature="testAfterTest()[pri:0, instance:com.mu.testcases.TestConfig@5a08197e]" name="testAfterTest" is-config="true" duration-ms="1" started-at="2019-08-02T15:26:10Z" finished-at="2019-08-02T15:26:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAfterTest -->
        <test-method status="PASS" signature="testAfterSuite()[pri:0, instance:com.mu.testcases.TestConfig@5a08197e]" name="testAfterSuite" is-config="true" duration-ms="0" started-at="2019-08-02T15:26:10Z" finished-at="2019-08-02T15:26:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAfterSuite -->
      </class> <!-- com.mu.testcases.TestConfig -->
      <class name="com.mu.testcases.NonSubsAdblockTest">
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:com.mu.testcases.NonSubsAdblockTest@175348ba]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2019-08-02T15:26:01Z" finished-at="2019-08-02T15:26:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="FAIL" signature="verifyAdblockAnonMC1()[pri:0, instance:com.mu.testcases.NonSubsAdblockTest@175348ba]" name="verifyAdblockAnonMC1" duration-ms="1880" started-at="2019-08-02T15:26:01Z" finished-at="2019-08-02T15:26:03Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.fail(Assert.java:100)
	at com.mu.testcases.NonSubsAdblockTest.verifyAdblockAnonMC1(NonSubsAdblockTest.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:813)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[For the asset: barOne]]>
            </line>
            <line>
              <![CDATA[Error: expected [false] but found [true]]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyAdblockAnonMC1 -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:com.mu.testcases.NonSubsAdblockTest@175348ba]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2019-08-02T15:26:03Z" finished-at="2019-08-02T15:26:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:com.mu.testcases.NonSubsAdblockTest@175348ba]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2019-08-02T15:26:03Z" finished-at="2019-08-02T15:26:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="verifyAdblockAnonMC2()[pri:0, instance:com.mu.testcases.NonSubsAdblockTest@175348ba]" name="verifyAdblockAnonMC2" duration-ms="1936" started-at="2019-08-02T15:26:03Z" finished-at="2019-08-02T15:26:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdblockAnonMC2 -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:com.mu.testcases.NonSubsAdblockTest@175348ba]" name="setUpBeforeMethod" is-config="true" duration-ms="1" started-at="2019-08-02T15:26:05Z" finished-at="2019-08-02T15:26:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:com.mu.testcases.NonSubsAdblockTest@175348ba]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2019-08-02T15:26:05Z" finished-at="2019-08-02T15:26:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="verifyAdblockAnonMC3()[pri:0, instance:com.mu.testcases.NonSubsAdblockTest@175348ba]" name="verifyAdblockAnonMC3" duration-ms="1569" started-at="2019-08-02T15:26:05Z" finished-at="2019-08-02T15:26:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdblockAnonMC3 -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:com.mu.testcases.NonSubsAdblockTest@175348ba]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2019-08-02T15:26:06Z" finished-at="2019-08-02T15:26:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:com.mu.testcases.NonSubsAdblockTest@175348ba]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2019-08-02T15:26:06Z" finished-at="2019-08-02T15:26:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="verifyAdblockRegiMC2()[pri:0, instance:com.mu.testcases.NonSubsAdblockTest@175348ba]" name="verifyAdblockRegiMC2" duration-ms="1494" started-at="2019-08-02T15:26:06Z" finished-at="2019-08-02T15:26:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdblockRegiMC2 -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:com.mu.testcases.NonSubsAdblockTest@175348ba]" name="tearDownAfterMethod" is-config="true" duration-ms="0" started-at="2019-08-02T15:26:08Z" finished-at="2019-08-02T15:26:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:com.mu.testcases.NonSubsAdblockTest@175348ba]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2019-08-02T15:26:08Z" finished-at="2019-08-02T15:26:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="PASS" signature="verifyAdblockRegiMC3()[pri:0, instance:com.mu.testcases.NonSubsAdblockTest@175348ba]" name="verifyAdblockRegiMC3" duration-ms="1387" started-at="2019-08-02T15:26:08Z" finished-at="2019-08-02T15:26:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdblockRegiMC3 -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:com.mu.testcases.NonSubsAdblockTest@175348ba]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2019-08-02T15:26:09Z" finished-at="2019-08-02T15:26:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
        <test-method status="PASS" signature="setUpBeforeMethod()[pri:0, instance:com.mu.testcases.NonSubsAdblockTest@175348ba]" name="setUpBeforeMethod" is-config="true" duration-ms="0" started-at="2019-08-02T15:26:09Z" finished-at="2019-08-02T15:26:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeMethod -->
        <test-method status="FAIL" signature="verifyAdblockRegiMC4()[pri:0, instance:com.mu.testcases.NonSubsAdblockTest@175348ba]" name="verifyAdblockRegiMC4" duration-ms="1220" started-at="2019-08-02T15:26:09Z" finished-at="2019-08-02T15:26:10Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.fail(Assert.java:100)
	at com.mu.testcases.NonSubsAdblockTest.verifyAdblockRegiMC4(NonSubsAdblockTest.java:159)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:813)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[For the asset: barOne]]>
            </line>
            <line>
              <![CDATA[Error: expected [false] but found [true]]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyAdblockRegiMC4 -->
        <test-method status="PASS" signature="tearDownAfterMethod()[pri:0, instance:com.mu.testcases.NonSubsAdblockTest@175348ba]" name="tearDownAfterMethod" is-config="true" duration-ms="1" started-at="2019-08-02T15:26:10Z" finished-at="2019-08-02T15:26:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterMethod -->
      </class> <!-- com.mu.testcases.NonSubsAdblockTest -->
    </test> <!-- CAPI Regression Test -->
  </suite> <!-- Suite -->
</testng-results>
